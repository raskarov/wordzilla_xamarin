// This file has been autogenerated from a class added in the UI designer.

using System;
using MonoTouch.Foundation;
using MonoTouch.UIKit;
using System.Drawing;
using System.Threading.Tasks;

namespace Wordzilla
{
	public partial class UIOneCard : UIView
	{
		public static readonly UINib Nib = UINib.FromName ("UIOneCard", NSBundle.MainBundle);

		public UIOneCard (IntPtr handle) : base (handle)
		{

		}

		public static UIOneCard Create (int wordid, string word, string transcription, string example, int status, string russian, float leftOffset)
		{
			var nib = (UIOneCard)Nib.Instantiate (null, null) [0];
			nib.UIWord.Text = word;
			nib.UITranscription.Text = transcription;
			if (!string.IsNullOrEmpty (example)) {
				nib.UIExampleText.Text = example;
				nib.UIBtmExample.Hidden = false;
				nib.UIExampleText.Hidden = false;
			} else {
				nib.UIExampleText.Hidden = true;
				nib.UIBtmExample.Hidden = true;
			}
			nib.WordId = wordid;
			nib.Status = status;
			nib.Russian = russian;
			nib.Frame = new RectangleF (leftOffset, -55, nib.Frame.Width, nib.Frame.Height);
			/*nib.UIVoice.TouchUpInside += (object sender, EventArgs e) => {

				string url = string.Empty;
				Task.Factory.StartNew (
					() => {
						url = AppApi.Mp3Url (word);
					}
				).ContinueWith (
					t => {
						Envi.Sounds.PlaySound (url);

					});
			};*/

			return nib;
		}

		partial void SpeakWord (MonoTouch.UIKit.UIButton sender){
			string url = string.Empty;
			string word=Word;
			Task.Factory.StartNew (
				() => {
					url = AppApi.Mp3Url (word);
				}
			).ContinueWith (
				t => {
					Envi.Sounds.PlaySound (url);

				});
		}

		public EventHandler SpeakEnglish {
			set{ UIVoice.TouchUpInside += value; }
		}

		public EventHandler TouchAnswer {
			set{ UITouchCard.TouchUpInside += value; }
		}

		public float Right {
			get { 
				return this.Frame.Right; 
			}
		}

		public int Status {
			get;
			set;
		}

		public int WordId {
			get;
			set;
		}

		public string Russian {
			get;
			set;
		}

		public string Word {
			get { return UIWord.Text; }
			set{ UIWord.Text = value; }
		}

		public string Transcription {
			get { return UITranscription.Text; }
			set{ UITranscription.Text = value; }
		}

		public string ExampleText {
			get { return UIExampleText.Text; }
			set{ UIExampleText.Text = value; }
		}
	}
}
